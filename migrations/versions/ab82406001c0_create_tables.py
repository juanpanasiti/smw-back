"""Create tables

Revision ID: ab82406001c0
Revises: 
Create Date: 2023-06-01 00:27:38.731678

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ab82406001c0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('hashed_password', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'COMMON', name='roleenum'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_cards',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('closing_date', sa.Date(), nullable=False),
    sa.Column('expiring_date', sa.Date(), nullable=False),
    sa.Column('limit', sa.Float(precision=2), nullable=False),
    sa.Column('main_credit_card_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['main_credit_card_id'], ['credit_cards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_card_statements',
    sa.Column('date_from', sa.Date(), nullable=False),
    sa.Column('date_to', sa.Date(), nullable=False),
    sa.Column('total', sa.Float(precision=2), nullable=False),
    sa.Column('period', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('TO_CHECK', 'IN_PROGRESS', 'REFUNDED', 'CANCELED', 'PAID', name='statusenum'), nullable=False),
    sa.Column('credit_card_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_cards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchases',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('cc_name', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Float(precision=2), nullable=False),
    sa.Column('total_installments', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('TO_CHECK', 'IN_PROGRESS', 'REFUNDED', 'CANCELED', 'PAID', name='statusenum'), nullable=False),
    sa.Column('purchased_at', sa.Date(), nullable=False),
    sa.Column('is_subscription', sa.Boolean(), nullable=False),
    sa.Column('credit_card_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_cards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase_payments',
    sa.Column('amount', sa.Float(precision=2), nullable=False),
    sa.Column('status', sa.Enum('TO_CHECK', 'IN_PROGRESS', 'REFUNDED', 'CANCELED', 'PAID', name='statusenum'), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('paid_date', sa.Date(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statement_items',
    sa.Column('carged_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Float(precision=2), nullable=False),
    sa.Column('credit_card_statement_id', sa.Integer(), nullable=False),
    sa.Column('purchase_payment_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['credit_card_statement_id'], ['credit_card_statements.id'], ),
    sa.ForeignKeyConstraint(['purchase_payment_id'], ['purchase_payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('statement_items')
    op.drop_table('purchase_payments')
    op.drop_table('purchases')
    op.drop_table('credit_card_statements')
    op.drop_table('credit_cards')
    op.drop_table('users')
    # ### end Alembic commands ###
